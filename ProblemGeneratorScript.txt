Prob[name_] :=
 (Clear[t, x, y, z, x1, x2, x3, x4, x5];
  
  
  Block[{ALGEBRA, TRIGONOMETRY, PRECALCULUS, CALCULUS, ORDINARY, 
    LINEAR , COMPLEX, Name, Number},
   
   If[Length[
      Position[{ALGEBRA, TRIGONOMETRY, PRECALCULUS, CALCULUS, 
        ORDINARY, LINEAR , COMPLEX}, 
       ToExpression[
        ToUpperCase[
         ToString[
          ToExpression[
            ToLowerCase[ToString[name]]] /. {alg -> algebra, 
            tri -> trigonometry, pre -> precalculus, cal -> calculus, 
            ode -> ordinary, ord -> ordinary, lin -> linear, 
            com -> complex}]]]]] == 1,
    
    Name = 
     ToString[
      ToExpression[ToLowerCase[ToString[name]]] /. {alg -> algebra, 
        tri -> trigonometry, pre -> precalculus, cal -> calculus, 
        ode -> ordinary, ord -> ordinary, lin -> linear, 
        com -> complex}]; ALGEBRA = 4; TRIGONOMETRY = 5; 
    PRECALCULUS = 4; CALCULUS = 6; ORDINARY = 5; LINEAR = 8; 
    COMPLEX = 4; 
    Number = 
     ToString[
      RandomInteger[{1, 
        ToExpression[
         ToUpperCase[
          ToString[
           ToExpression[
             ToLowerCase[ToString[name]]] /. {alg -> algebra, 
             tri -> trigonometry, pre -> precalculus, cal -> calculus,
              ode -> ordinary, ord -> ordinary, lin -> linear, 
             com -> complex}]]]}]];
    
    <|
       
       algebra1 :> 
        Column[{"Solve for x.", 
          Block[{a, b, c, d}, 
           Equal[Expand[a (x - b) (x - c) + d], 
             d] /. {a -> (-1)^(RandomInteger[{1, 
                   0}]) RandomInteger[{1, 5}],
             b -> (-1)^RandomInteger[{1, 0}] RandomInteger[{1, 10}],
             c -> RandomInteger[{-10, 10}],
             d -> RandomInteger[{-25, 25}]}
           ]}],
       algebra2 :> 
        Column[{"Solve for x.", 
          Block[{a, b, c}, 
           Equal[a x + c, 
             b a + c] /. {a -> (-1)^(RandomInteger[{1, 
                   0}]) RandomInteger[{1, 10}],
             b -> RandomInteger[{-10, 10}],
             c -> RandomInteger[{-20, 20}]}
           ]}],
       algebra3 :> 
        Column[{"Solve for x.", 
          Block[{a, b, c, d}, 
           Equal[Expand[a x (x - b) (x - c) + d], 
             d] /. {a -> (-1)^(RandomInteger[{1, 
                   0}]) RandomInteger[{1, 5}],
             b -> (-1)^RandomInteger[{1, 0}] RandomInteger[{1, 15}],
             c -> RandomInteger[{-20, 20}],
             d -> RandomInteger[{-20, 20}]}
           ]}],
       algebra4 :> 
        Column[{"Solve for x and y.", 
          Block[{a, b, c, d, e, f}, {a = RandomInteger[{-10, 10}],
            b = RandomInteger[{-10, 10}],
            c = RandomInteger[{-10, 10}],
            d = RandomInteger[{-10, 10}],
            e = RandomInteger[{-10, 10}],
            f = RandomInteger[{-10, 10}]}; 
           If[a d == b c, a = a + 1, a = a]; 
           Column[{Equal[{c, d}.{x, y}, {a, b}.{c, d}], 
             Equal[{e, f}.{x, y}, {a, b}.{e, f}]}]
           ]}],
       
       
       trigonometry1 :> 
        Column[{"Solve for the angle x.", 
          Block[{a, b, c, fun}, 
           Equal[(-1)^RandomInteger[{0, 1}] (Abs[a] + Abs[b]) fun[x] +
               c, a + c] /. {a -> 
              RandomReal[{-50, 50}, WorkingPrecision -> 4],
             b -> RandomReal[{-50, 50}, WorkingPrecision -> 4],
             c -> RandomReal[{-100, 100}, WorkingPrecision -> 4],
             fun -> {Sin, Cos}[[RandomInteger[{1, 2}]]]}
           ]}],
       trigonometry2 :> 
        Column[{"Solve for the angle x.", 
          Block[{a, b, c, fun}, 
           Equal[a fun[x] + c, 
             c + (-1)^
                RandomInteger[{0, 1}] (Abs[b] + 
                 Abs[a])] /. {a -> (-1)^(RandomInteger[{0, 
                   1}]) RandomReal[{1, 100}, WorkingPrecision -> 4],
             b -> RandomReal[{-50, 50}, WorkingPrecision -> 4],
             c -> RandomReal[{-100, 100}, WorkingPrecision -> 4],
             fun -> {Sec, Csc}[[RandomInteger[{1, 2}]]]}
           ]}],
       trigonometry3 :> 
        Column[{"Solve for the angle x.", 
          Block[{a, b, c, fun}, 
           Equal[a fun[x] + c, 
             b + c] /. {a -> (-1)^(RandomInteger[{0, 
                   1}]) RandomReal[{1, 50}, WorkingPrecision -> 4],
             b -> RandomReal[{-50, 50}, WorkingPrecision -> 4],
             c -> RandomReal[{-100, 100}, WorkingPrecision -> 4],
             fun -> {Tan, Cot}[[RandomInteger[{1, 2}]]]}
           ]}],
       trigonometry4 :> 
        Column[{"Find the dot of the two given vectors.", Block[{a, b},
           a = Table[RandomInteger[{-15, 15}], {i, 1, 3}];
           b = Table[RandomInteger[{-15, 15}], {i, 1, 3}];
           
           StringReplace[ToString[a], {"{" -> "<", "}" -> ">"}] <> 
            " and " <> 
            StringReplace[ToString[b], {"{" -> "<", "}" -> ">"}]
           ]}],
       trigonometry5 :> 
        Column[{"Find the cross of the two given vectors.", 
          Block[{a, b},
           a = Table[RandomInteger[{-15, 15}], {i, 1, 3}];
           b = Table[RandomInteger[{-15, 15}], {i, 1, 3}];
           
           StringReplace[ToString[a], {"{" -> "<", "}" -> ">"}] <> 
            " and " <> 
            StringReplace[ToString[b], {"{" -> "<", "}" -> ">"}]
           ]}],
       
       
       precalculus1 :> 
        Column[{"Solve for x, y, and z.", 
          Block[{matrix, a, b, c, x, y, z},
           
           matrix = 
            Table[RandomInteger[{-15, 15}], {i, 1, 3}, {k, 1, 3}];
           
           Equal[Row[{MatrixForm[matrix], MatrixForm[{x, y, z}]}], 
             MatrixForm[matrix.{a, b, c}]] /. {a -> 
              RandomReal[{-25, 25}, WorkingPrecision -> 4],
             b -> RandomReal[{-25, 25}, WorkingPrecision -> 4],
             c -> RandomReal[{-25, 25}, WorkingPrecision -> 4]}
           ]}],
       precalculus2 :> 
        Column[{"Solve for x.", 
          Block[{a, b, c, d, x}, 
           Equal[a x^2 + b x + c, 
             d] /. {a -> RandomReal[{-50, 50}, WorkingPrecision -> 4],
             b -> RandomReal[{-50, 50}, WorkingPrecision -> 4],
             c -> RandomReal[{-50, 50}, WorkingPrecision -> 4],
             d -> RandomReal[{-50, 50}, WorkingPrecision -> 4]}
           ]}],
       precalculus3 :> 
        Column[{"Solve for x.", 
          Block[{a, b, c, x}, 
           Equal[a^c a^x, 
             a^b] /. {a -> RandomReal[{1, 5}, WorkingPrecision -> 4],
             b -> RandomReal[{-5, 5}],
             c -> RandomReal[{-3, 3}]}
           ]}],
       precalculus4 :> 
        Column[{"Find the vertex of the given quadratic equation.", 
          Block[{a, b, c, d, x}, 
           a x^2 + b x + 
             c /. {a -> RandomReal[{-50, 50}, WorkingPrecision -> 4],
             b -> RandomReal[{-50, 50}, WorkingPrecision -> 4],
             c -> RandomReal[{-50, 50}, WorkingPrecision -> 4]}
           ]}],
       
       
       calculus1 :> 
        Column[{"Differentiate using product rule.", 
          Block[{i, function, fun1, fun2, fun3},
           (Hold[D]@
               ReleaseHold[
                Hold[ReplaceAll[{x -> {x, y, z, t}[[
                    RandomInteger[{1, 4}]]],
                    
                    fun1 :> {Function[x, E^x], Log, Sin, Cos, Tan, 
                    ArcSin, ArcCos, ArcTan, Sqrt}[[
                    RandomInteger[{1, 9}]]],
                    
                    fun2 :> {Function[x, E^x], Log, Sin, Cos, Tan, 
                    ArcSin, ArcCos, ArcTan, Sqrt}[[
                    RandomInteger[{1, 9}]]],
                    
                    fun3 :> {Function[x, E^x], Log, Sin, Cos, Tan, 
                    ArcSin, ArcCos, ArcTan, Sqrt}[[
                    RandomInteger[{1, 9}]]]}]
                  ][
                 function[
                  Table[fun1[x] fun2[x] fun3[x], {i, 1, 
                    RandomInteger[{1, 2}]}]
                  , x]]]) /. {function[a_, b_] :> 
               function[Total[a], b]} /. {Hold[D][function[a_, b_]] ->
               HoldForm[D[a, b]]}
           ]}],
       calculus2 :> 
        Column[{"Differentiate using chain rule.", 
          Block[{i, function, fun1, 
            fun2}, (Hold[D]@
               ReleaseHold[
                Hold[ReplaceAll[{x -> {x, y, z, t}[[
                    RandomInteger[{1, 4}]]],
                    
                    fun1 :> {Function[x, E^x], Log, Sin, Cos, Tan, 
                    ArcSin, ArcCos, ArcTan, Sqrt}[[
                    RandomInteger[{1, 9}]]],
                    
                    fun2 :> {Function[x, E^x], Log, Sin, Cos, Tan, 
                    ArcSin, ArcCos, ArcTan, Sqrt}[[
                    RandomInteger[{1, 9}]]]}]
                  ][
                 function[
                  Table[fun1[fun2[x]], {i, 1, RandomInteger[{1, 3}]}]
                  , x]]]) /. {function[a_, b_] :> 
               function[Total[a], b]} /. {Hold[D][function[a_, b_]] ->
               HoldForm[D[a, b]]}
           ]}],
       calculus3 :> 
        Column[{"Differentiate the following.", 
          Block[{i, function, fun1, 
            fun2}, (Hold[D]@
               ReleaseHold[
                Hold[ReplaceAll[{x -> {x, y, z, t}[[
                    RandomInteger[{1, 4}]]],
                    
                    fun1 :> {Function[x, E^x], Log, Sin, Cos, Tan, 
                    ArcSin, ArcCos, ArcTan, Sqrt}[[
                    RandomInteger[{1, 9}]]],
                    a :> RandomInteger[{-9, 9}]}]
                  ][
                 function[
                  Table[a fun1[x]^a, {i, 1, RandomInteger[{1, 3}]}]
                  , x]]]) /. {function[a_, b_] :> 
               function[Total[a], b]} /. {Hold[D][function[a_, b_]] ->
               HoldForm[D[a, b]]}
           ]}],
       calculus4 :> 
        Column[{"Evaluate the given integral.", 
          Block[{a, b, c, d, e, f, t, x, y, z}, 
           Hold[Integrate][
              Table[a x^a, {i, 1, RandomInteger[{1, 4}]}], 
              x] /. {x -> {x, y, z, t}[[RandomInteger[{1, 4}]]],
              
              a :> RandomInteger[{-10, 10}]} //. {Hold[Integrate][u_, 
               v_] -> Held[Integrate][Total[u], v], 
             Held[Integrate][u_, v_] -> HoldForm[Integrate[u, v]]}
           ]}], 
       calculus5 :> 
        Column[{"Evaluate the given integral.", 
          Block[{a, i, fun1, fun2, x}, 
           Hold[Integrate]@
              Sequence[
               TraditionalForm[fun1[a x] fun2[a x]] /. List -> Plus, 
               x] //. {x -> {x, y, z, t}[[RandomInteger[{1, 4}]]],
              
              fun1 -> {Function[x, E^x], Sin, Cos, Function[u, u^a]}[[
                RandomInteger[{0, 4}]]],
              
              fun2 -> {Function[x, E^x], Sin, Cos, Function[u, u^a]}[[
                RandomInteger[{0, 4}]]],
              a -> RandomInteger[{1, 5}]
              } /. {Hold[Integrate][u__] -> HoldForm[Integrate[u]]}
           ]}],
       calculus6 :> 
        Column[{"Find the gradient of the given function.", 
          Block[{i, item, function, function1, fun1, fun2, fun3, x, y,
             z},
           item := {x, y, z}[[RandomInteger[{1, 3}]]];
           (ReleaseHold[Hold[ReplaceRepeated[{
                  
                  fun1 :> {Times[
                    Table[fun2, {i, 0, RandomInteger[{1, 3}]}] /. 
                    List -> Sequence], 
                    Plus[Table[
                    fun2, {i, 0, RandomInteger[{1, 2}]}] /. 
                    List -> Sequence], E^fun2, Log[fun2, fun2], 
                    Sin[fun2], Cos[fun2], Tan[fun2], ArcSin[fun2], 
                    ArcCos[fun2], ArcTan[fun2, fun2], 
                    fun2^RandomInteger[{-2, 2}], 
                    RandomInteger[{-25, 25}]}[[
                    RandomInteger[{1, 12}]]],
                  
                  fun2 :> {Times[
                    Table[fun3, {i, 0, RandomInteger[{1, 3}]}] /. 
                    List -> Sequence], 
                    Plus[Table[
                    fun3, {i, 0, RandomInteger[{1, 2}]}] /. 
                    List -> Sequence], E^fun3, Log[fun3, fun3], 
                    Sin[fun3], Cos[fun3], Tan[fun3], ArcSin[fun3], 
                    ArcCos[fun3], ArcTan[fun3, fun3], 
                    fun3^RandomInteger[{-2, 2}], 
                    RandomInteger[{-25, 25}]}[[
                    RandomInteger[{1, 12}]]],
                  
                  fun3 :> {E^item, Log[item, item], Sin[item], 
                    Cos[item], Tan[item], ArcSin[item], ArcCos[item], 
                    ArcTan[item, item], RandomInteger[{-25, 25}]}[[
                    RandomInteger[{1, 9}]]]}]
                ][function[Table[fun1, {i, 1, RandomInteger[{1, 4}]}]
                , x, y, z]]]) //. {function[a_, b__] :> 
              function1[Total[a], b], 
             function1[a_, b__] :> HoldForm[Grad[a, {b}]]}
           ]}],
       calculus7 :> 
        Column[{"Evaluate the given derivative.", 
          Block[{a, b, c, d, e, f, t, x, y, z}, 
           Hold[D][Table[a x^a, {i, 1, RandomInteger[{1, 5}]}], 
              x] /. {x -> {x, y, z, t}[[RandomInteger[{1, 4}]]],
              a :> RandomInteger[{-10, 10}]} //. {Hold[D][u_, v_] -> 
              Held[D][Total[u], v], 
             Held[D][u_, v_] -> HoldForm[D[u, v]]}
           ]}],
       
       
       ordinary1 :> 
        Block[{a, b, c, d, e, f, t, u, x, y, z, fun1, fun2},
         fun1 = {x, y, z}[[RandomInteger[{1, 3}]]];
         fun2 = {Cos, Sin, Function[v, E^v], Cosh, Sinh, 
            Function[v, t^RandomInteger[{1, 15}]]}[[
           RandomInteger[{1, 6}]]]; 
         Column[{"Use Laplace Transform to solve for " <> 
             ToString[fun1] <> "[t].", 
            a fun1''[t] + b fun1'[t] + c fun1[t] == 
             d fun2''[t] + e fun2'[t] + f fun2[t]}] /.
          {a -> RandomInteger[{-20, 20}],
           b -> RandomInteger[{-20, 20}],
           c -> RandomInteger[{-20, 20}],
           d -> RandomInteger[{-20, 20}],
           e -> RandomInteger[{-20, 20}],
           f -> RandomInteger[{-20, 20}]
           }],
       ordinary2 :> 
        Block[{a, b, c, d, e, f, t, u, x, y, z, fun1, fun2, tab},
         tab = 
          Table[a D[fun1[t], {t, i}], {i, 0, RandomInteger[{2, 4}]}];
         fun1 = {x, y, z}[[RandomInteger[{1, 3}]]];
         fun2 = {Cos, Sin, Function[v, E^v], Cosh, Sinh, 
            Function[v, t^RandomInteger[{1, 15}]]}[[
           RandomInteger[{1, 6}]]]; 
         Column[{"Use Laplace Transform to solve for " <> 
             ToString[fun1] <> "[t].", 
            Equal[(tab /. List -> Plus), 0]}] /. {a :> 
            RandomInteger[{-20, 20}],
           b -> RandomInteger[{-20, 20}],
           c -> RandomInteger[{-20, 20}],
           d -> (-1)^RandomInteger[{0, 1}] RandomInteger[{1, 5}]
           }],
       ordinary3 :> 
        Block[{a, b, c, d, e, f, g, t, u, x, y, z, fun1, fun2},
         fun1 = {x, y, z}[[RandomInteger[{1, 3}]]];
         fun2 = {Cos, Sin, Function[v, E^v], Cosh, Sinh, 
            Function[v, t^RandomInteger[{1, 15}]]}[[
           RandomInteger[{1, 6}]]]; Column[{"Solve the given \!\(\*
StyleBox[\"ODE\",\nFontSlant->\"Italic\"]\) for " <> ToString[fun1] <>
              "[t].", 
            a fun1''[t] + b fun1'[t] + c fun1[t] == 0}] /. {a -> 
            RandomInteger[{-20, 20}],
           b -> RandomInteger[{-20, 20}],
           c -> RandomInteger[{-20, 20}]
           }],
       ordinary4 :> Block[{a, b, c, d, e, f, g, t, u, x, y, z, fun1},
         fun1 = {x, y, z}[[RandomInteger[{1, 3}]]];
         Column[{"Solve the given \!\(\*
StyleBox[\"ODE\",\nFontSlant->\"Italic\"]\) for " <> ToString[fun1] <>
              "[t].", a fun1'[t] == c fun1[t]^b}] /.
          {a -> RandomInteger[{-20, 20}],
           b -> (-1)^RandomInteger[{0, 1}] RandomInteger[{1, 10}],
           c -> RandomInteger[{-20, 20}]
           }],
       ordinary5 :> Block[{a, b, c, d, e, f, g, t, u, x, y, z, fun1},
         fun1 = {x, y, z}[[RandomInteger[{1, 3}]]];
         Column[{"Solve the given \!\(\*
StyleBox[\"ODE\",\nFontSlant->\"Italic\"]\) for " <> ToString[fun1] <>
              "[t].", fun1'[t] + a fun1[t] == c }] /.
          {a -> RandomInteger[{-20, 20}],
           b -> (-1)^RandomInteger[{0, 1}] RandomInteger[{1, 20}],
           c -> RandomInteger[{-20, 20}]
           }],
       
       
       linear1 :> Column[{"Add the given matrices", Block[{a, b, c, d},
           a = RandomInteger[{2, 4}];
           b = RandomInteger[{2, 4}]; 
           Row[{c, 
              Table[RandomInteger[{-10, 10}], {i, 1, a}, {k, 1, b}], 
              "+", d, 
              Table[RandomInteger[{-10, 10}], {i, 1, a}, {k, 1, 
                b}]}] /.
            {c -> (-1)^RandomInteger[{0, 1}] RandomInteger[{1, 3}],
             d -> (-1)^RandomInteger[{0, 1}] RandomInteger[{1, 3}]}
           ]}],
       linear2 :> Column[{"Multiply the given matrices.", Block[{a, b},
           a = RandomInteger[{2, 4}];
           b = RandomInteger[{2, 4}]; 
           Row[{Table[
               RandomInteger[{-10, 10}], {i, 1, a}, {k, 1, 
                b}]\[Transpose], 
             Table[RandomInteger[{-10, 10}], {i, 1, a}, {k, 1, b}]}]
           ]}],
       linear3 :> Column[{"Solve for the vector.",
          Block[{x1, x2, x3, x4, x5, n, matrix, vector},
           n = RandomInteger[{2, 4}];
           
           matrix := 
            Table[RandomInteger[{-10, 10}], {i, 1, n}, {k, 1, n}];
           While[TrueQ[Det[matrix] == 0], matrix];
           vector = {{x1}, {x2}, {x3}, {x4}, {x5}}[[1 ;; n]];
           
           Equal[Row[{matrix, vector}], 
            matrix.Table[{RandomInteger[{-10, 10}]}, {i, 1, n}]]
           ]}],
       linear4 :> Column[{"Find the determinant.", Block[{a},
           a = RandomInteger[{2, 4}]; 
           Row[{Table[RandomInteger[{-10, 10}], {i, 1, a}, {k, 1, a}]}]
           ]}],
       linear5 :> Column[{"Find the eigenvectors.", Block[{a, b, i, k},
            a = RandomInteger[{2, 4}];
            
            b = Table[{(-1)^
                 RandomInteger[{0, 1}] RandomInteger[{1, 10}]}, {i, 1,
                a}];
            b.b\[Transpose]] // MatrixForm
          }],
       linear6 :> 
        Column[{"Find the orthogonal projection matrix.", 
          Block[{a, b, i, k},
            a = RandomInteger[{1, 2}];
            b = RandomInteger[{1, 2}];
            
            Table[RandomInteger[{-20, 20}], {i, 1, a}, {k, 1, 
              a + b}]] // MatrixForm
          }],
       linear7 :> Column[{"Find the eigenvectors.", Block[{a, b, i, k},
            a = RandomInteger[{2, 4}];
            
            b = Table[{(-1)^
                 RandomInteger[{0, 1}] RandomInteger[{1, 10}]}, {i, 1,
                a}];
            {LowerTriangularize, UpperTriangularize}[[
              RandomInteger[{1, 2}]]][b.b\[Transpose]]] // MatrixForm
          }],
       linear8 :> 
        Column[{"Find the characteristic equation.", Block[{a},
           a = RandomInteger[{2, 4}]; 
           Row[{Table[RandomInteger[{-10, 10}], {i, 1, a}, {k, 1, a}]}]
           ]}],
       
       
       complex1 :> 
        Column[{"Find the resulting complex number.", 
          Block[{a, b, c}, 
           HoldForm[(a + I b)^c] /. {a -> 
              RandomReal[{-2, 2}, WorkingPrecision -> 4], 
             b -> RandomReal[{-2, 2}, WorkingPrecision -> 4], 
             c -> RandomReal[{-Pi, Pi}, WorkingPrecision -> 4]}
           ]}],
       complex2 :> 
        Column[{"Find the magnitude and angle of the complex number.",
           Block[{a, b}, 
           a + b I /. {a -> 
              RandomReal[{-50, 50}, WorkingPrecision -> 4], 
             b -> RandomReal[{-50, 50}, WorkingPrecision -> 4]}
           ]}],
       complex3 :> 
        Column[{"Multiply the following complex numbers.", 
          Block[{a, b, c, d}, 
           HoldForm[(a + b I) (c + d I)] /. {a -> 
              RandomReal[{-E, E}, WorkingPrecision -> 4], 
             b -> RandomReal[{-E, E}, WorkingPrecision -> 4], 
             c -> RandomReal[{-Pi, Pi}, WorkingPrecision -> 4], 
             d -> RandomReal[{-Pi, Pi}, WorkingPrecision -> 4]}
           ]}],
       complex4 :> 
        Block[{a, b, c, z, fun1}, 
         Column[{"Solve for the complex value \!\(\*
StyleBox[\"z\",\nFontSlant->\"Italic\"]\).", 
           Equal[fun1[z], 
             a + b I] //. {a -> 
              RandomReal[{-50, 50}, WorkingPrecision -> 4], 
             b -> RandomReal[{-50, 50}, WorkingPrecision -> 4], 
             c -> RandomReal[{-10, 10}], 
             fun1 -> {Function[x, E^x], Log, Sin, Cos, Tan, ArcSin, 
                ArcCos, ArcTan, Function[x, x^c]}[[
               RandomInteger[{1, 9}]]]}
           }]]
       
       
       |>[ToExpression[ToLowerCase[Name] <> Number]] // 
     TraditionalForm,
    
    Style[
     Column[{"I'm sorry, but " <> ToString[name] <> 
        " is not a recognized math topic.",
       "The available topics include:",
       "algebra/alg, precalculus/pre, trigonometry/tri",
       "precalculus/pre, calculus/cal, linear/lin (linear algebra)",
       "ordinary/ord/ode (ordinary differential equations)",
       "and complex/com (introductory complex analysis."}], 
     FontFamily -> "Times New Roman"]]])
